{
    "contents" : "#-------------------------------#\n# Test of functions in 'rtplot' #\n# Kevin Potter                  #\n# Updated 11/06/2016            #\n#-------------------------------#\n\n# Load in packages\nlibrary( seqmodels )\nlibrary( rtplots )\n\nrunCode = c(\n  T, # blankRTplot, cdf_curve\n  F,\n  F,\n  F,\n  F,\n  F\n)\n\n### Test of CDF function ###\n\nif ( runCode[1] ) {\n  \n  x11(width = 12, height = 12); layout( rbind(1:2,3:4) )\n  \n  d = priming_data\n  \n  # Example with single subject\n  blankRTplot() # Create empty plot\n  \n  # Pick condition in which not all subjects picked both responses\n  cnd = d$Condition == 0 & d$Subject == 1\n  rt = d$RT[cnd]; ch = d$Choice[cnd]\n  cdf_curve( rt, ch ); cdf_curve( rt, ch, sel = 0, lty = 2 )\n  \n  cnd = d$Condition == 0 & d$Subject == 5\n  rt = d$RT[cnd]; ch = d$Choice[cnd]\n  cdf_curve( rt, ch, sel = 0, lty = 2, col= 'blue' )\n  # Throws an error when no observations to plot over\n  # cdf_curve( rt, ch, col = 'blue' );\n  \n  # Example with multiple subjects\n  par( mar = c(5,6,1,1) ) # Create empty plot\n  blankRTplot( bty='l', cex.axis = 1.2, cex.lab = 1.5 )\n  \n  # Pick condition in which not all subjects picked both responses\n  cnd = d$Condition == 0\n  rt = d$RT[cnd]; ch = d$Choice[cnd]; grp = d$Subject[cnd]\n  # Successfully aggregates even though not all subjects had \n  # observations for both choices\n  cdf_curve( rt, ch ); cdf_curve( rt, ch, sel = 0, lty = 2 )\n  \n  # We can test the aggregate version of the function by \n  # simulating a response time model in which a set of \n  # parameters vary normally. If the aggregate function \n  # for the empirical CDF produces matching curves to \n  # the true CDF of the model using the generating group \n  # means, the function is working as expected.\n  \n  # Define generating parameters\n  mx_v = 5\n  h_v = 3\n  gp = c( 1, h_v, 0, 1, mx_v - h_v, 0 )\n  S = 30 # Number of subjects\n  ahv = rnorm( S, h_v, .4 ) # Add normally distributed noise\n  alv = mx_v - ahv\n  \n  # Simulate 100 observations per subject\n  N = 100\n  grp = rep( 1:S, each = N ) # Define grouping factor\n  sim = rwaldrace( N*S, 1, rep( ahv, each = N ), 0, 1, rep(alv,each=N), 0 )\n  rt = sim[,1]; ch = sim[,2];\n  \n  # Compare aggregate empirical CDF to true model CDF\n  par( mar = c(5,4,3,.5) )\n  blankRTplot()\n  cdf_curve(rt,ch,grp=grp)\n  cdf_curve(rt,ch,sel=0,grp=grp,lty=2)\n  \n  x = seq(0,2,length=1000)\n  lines( x, pwaldrace(x,1,1,h_v,0,1,mx_v-h_v,0), col = 'blue' )\n  lines( x, pwaldrace(x,0,1,h_v,0,1,mx_v-h_v,0), col = 'blue', lty = 2 )\n  \n  # Example with flipped curves\n  blankRTplot(yDim=c(-1,1),bty='l',yaxt='n')\n  axis(2,seq(-1,1,.5),abs(seq(-1,1,.5)))\n  abline(h=0)\n  cnd = d$Condition == 7 & d$Subject == 7\n  rt = d$RT[cnd]; ch = d$Choice[cnd];\n  cdf_curve( rt, ch );\n  cdf_curve( rt, ch, sel = 0, opt = list( flip = T ), lty = 2 )\n  \n  # Output\n  \n  # Single subject\n  out = cdf_curve( rt, ch, opt = list( draw = F, out = T ) )\n  str( out )\n  \n  # Grouping factor\n  cnd = d$Condition == 7\n  rt = d$RT[cnd]; ch = d$Choice[cnd]; grp = d$Subject[cnd]\n  out = cdf_curve( rt, ch, grp = grp, opt = list( draw = F, out = T ) )\n  \n}\n\nif (runCode[2]) {\n  \n  gp = c( 1, 3, .3, 1, 1.5, .3 )\n  \n  N = 10000\n  sim = rwaldrace( N, gp[1], gp[2], gp[3], gp[4], gp[5], gp[6] )\n  rt = sim[,1]; ch = sim[,2]\n  \n  x11(width=12);\n  layout( cbind(1,2) )\n  blankRTplot(xDim=c(0,1))\n  \n  # True distributions\n  val = seq(0,2,length=1000)\n  p1 = pwaldrace(val,1, gp[1], gp[2], gp[3], gp[4], gp[5], gp[6] )\n  p0 = pwaldrace(val,0, gp[1], gp[2], gp[3], gp[4], gp[5], gp[6] )\n  \n  lines(val,p1,col='blue')\n  lines(val,p0,col='blue',lty = 2)\n  \n  # Empirical estimates\n  cdf_curve(rt,ch)\n  cdf_curve(rt,ch,sel=0,lty = 2)\n  \n  # Hazard curve\n  adj = pwaldrace(Inf,1,gp[1], gp[2], gp[3], gp[4], gp[5], gp[6] )\n  d1 = dwaldrace(val,1, gp[1], gp[2], gp[3], gp[4], gp[5], gp[6] )\n  # Re-weight to conditional density\n  d1 = d1/adj\n  # Calculate hazard function\n  h1 = d1/(1-p1/adj)\n  \n  adj = pwaldrace(Inf,0,gp[1], gp[2], gp[3], gp[4], gp[5], gp[6] )\n  d0 = dwaldrace(val,0, gp[1], gp[2], gp[3], gp[4], gp[5], gp[6] )\n  d1 = d0/adj\n  h0 = d0/(1-p0/adj)\n  \n  plot( val, h1, type = 'l' )\n  lines( val, h0, lty = 2 )\n  lines( val, d1, col = 'green' )\n  \n  hazard2_curve(rt,ch,j=40,col='red')\n  hazard2_curve(rt,ch,sel=0,j=40,lty = 2, col='red')\n  \n}\n\nif ( runCode[3] ) {\n  \n  x11(width=12); layout( cbind(1,2) )\n  \n  d = priming_data\n  \n  # Single subject\n  cnd = d$Condition == 4 & d$Subject == 7\n  rt = d$RT[ cnd ]; ch = d$Choice[ cnd ];\n  \n  blankRTplot(bty='l')\n  \n  output = cdf_curve( rt, ch, opt = list( out = T ) )\n  add_points( output, pch = 19, col = 'red' )\n  f = function(x) quantile(x,prob=seq(.1,.9,.2))\n  add_points( output, T_x = f, pch = 15, col='blue' )\n  \n  output = cdf_curve( rt, ch, sel = 0, opt = list( out = T ), lty = 2 )\n  add_points( output, pch = 19, col = 'red' )\n  f = function(x) quantile(x,prob=seq(.1,.9,.2))\n  add_points( output, T_x = f, pch = 15, col='blue' )\n  \n  # Multiple subjects\n  cnd = d$Condition == 0\n  rt = d$RT[ cnd ]; ch = d$Choice[ cnd ]; grp = d$Subject[ cnd ]\n  \n  blankRTplot(bty='l')\n  \n  output = cdf_curve( rt, ch, grp = grp, opt = list( out = T ) )\n  add_points( output, pch = 19, col = 'red' )\n  f = function(x) quantile(x,prob=seq(.1,.9,.2))\n  add_points( output, T_x = f, pch = 15, col='blue' )\n  \n  output = cdf_curve( rt, ch, sel = 0, grp = grp, opt = list( out = T ) )\n  add_points( output, pch = 19, col = 'red' )\n  f = function(x) quantile(x,prob=seq(.1,.9,.2))\n  add_points( output, T_x = f, pch = 15, col='blue' )\n  \n  \n}\n\nif ( runCode[4] ) {\n  \n  d = priming_data\n  \n  x11(width=12); layout( cbind(1,2) )\n  \n  # Single subject\n  cnd = d$Condition == 6 & d$Subject == 31\n  rt = d$RT[ cnd ]; ch = d$Choice[ cnd ];\n  \n  blankRTplot(bty='l')\n  quantile2_points( rt, ch, opt = list( pts = F ) )\n  quantile2_points( rt, ch, pch = 21, bg = 'blue' )\n  \n  # Multiple subjects\n  cnd = d$Condition == 6\n  rt = d$RT[ cnd ]; ch = d$Choice[ cnd ]; grp = d$Subject[ cnd ]\n  \n  blankRTplot(bty='l')\n  quantile2_points( rt, ch, grp = grp, opt = list( pts = F ) )\n  quantile2_points( rt, ch, grp = grp, pch = 21, bg = 'blue' )\n}\n\nif ( runCode[5] ) {\n  \n  d = priming_data\n  \n  x11(width=12); layout( cbind(1,2) )\n  \n  # Single subject\n  cnd = d$Condition == 12 & d$Subject == 29\n  rt = d$RT[ cnd ]; ch = d$Choice[ cnd ];\n  \n  blankRTplot(ver='CAF',bty='l')\n  caf_points( rt, ch, opt = list( pts = F ) )\n  caf_points( rt, ch, pch = 15, col = 'blue' )\n  \n  # Multiple subjects\n  cnd = d$Condition == 12\n  rt = d$RT[ cnd ]; ch = d$Choice[ cnd ]; grp = d$Subject[ cnd ]\n  \n  blankRTplot(ver='CAF',bty='l')\n  caf_points( rt, ch, grp = grp, opt = list( pts = F ) )\n  caf_points( rt, ch, grp = grp, pch = 15, col = 'blue' )\n  \n}\n\nif ( runCode[6] ) {\n  d = priming_data\n  x11(width=12); layout( cbind( 1, 2 ) )\n  \n  cnd = d$Condition == 13 & d$Subject == 9\n  rt = d$RT[cnd]; ch = d$Choice[cnd]\n  \n  blankRTplot(bty='l')\n  out = cdf_curve( rt, ch, opt = list( out = T ) )\n  add_segments( out, col = 'grey' )\n  \n  cnd = d$Condition == 13\n  rt = d$RT[cnd]; ch = d$Choice[cnd]; grp = d$Subject[cnd]\n  \n  blankRTplot(bty='l')\n  out = cdf_curve( rt, ch, grp = grp, opt = list( out = T ) )\n  T_x = function(x) quantile( x,prob = seq(.1,.9,.2) )\n  add_segments( out, T_x = T_x, col = 'grey' )\n  \n}",
    "created" : 1470955107082.000,
    "dirty" : true,
    "encoding" : "",
    "folds" : "",
    "hash" : "2317749767",
    "id" : "A888C197",
    "lastKnownWriteTime" : 21392300099829876,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}