{
    "collab_server" : "",
    "contents" : "#---------------#\n# QPE functions #\n#---------------#\n\n# Index\n# Lookup - 01:  ?\n# Lookup - 02:  ?\n# Lookup - 03:  ?\n# Lookup - 04:  ?\n\n# Lookup - 01\nj_qpe_one_level = function( input, npfd, prb ) {\n  # Purpose:\n  # ...\n  # Arguments:\n  # ...\n  # Returns:\n  # ...\n\n  l = length( prb ) * input$n_v\n  pd = data.frame( x = rep( NA, l ),\n                   y = rep( NA, l ),\n                   v = rep( input$val, each = length( prb ) ) )\n\n  for ( vl in input$val ) {\n    sel1 = input$ad$v == vl\n    sel2 = pd$v == vl\n    if ( length( sel1 ) > 0 ) {\n      pd$x[sel2] = quantile( input$ad$t[ sel1 ], prb );\n      sel_v = grep( as.character( vl ), colnames( npfd$P ) )\n      pd$y[sel2] = prb * npfd$P[ sel_v ]\n    } else {\n      pd$y[sel2] = 0;\n    }\n  }\n  out = list( pd = pd, xm = NULL, ym = NULL )\n\n  return( out )\n}\n\n# Lookup - 02\nj_qpe_group = function( input, npfd, prb,\n                        T_x = mean ) {\n  # Purpose:\n  # ...\n  # Arguments:\n  # ...\n  # Returns:\n  # ...\n\n  # Initialize output\n  l = length( prb ) * input$n_v\n  pd = data.frame( x = rep( NA, l ),\n                   y = rep( NA, l ),\n                   v = rep( input$val, each = length( prb ) ) )\n  ym = c() # Create empty lists\n  xm = c()\n\n  inc = 1\n  for ( vl in input$val ) {\n    sel1 = input$ad$v == vl\n    sel2 = pd$v == vl\n    if ( length( sel1 ) > 0 ) {\n\n      xm = c( xm, list( NULL ) )\n      ym = c( ym, list( NULL ) )\n\n      aq = by( input$ad$t[ sel1 ], list( input$ad$g[ sel1 ] ),\n               quantile, prob = prb )\n      mat = matrix( unlist( aq ),\n                    length( unique( input$ad$g[ sel1 ] ) ),\n                    length( prb ), byrow = T )\n      xm[[ inc ]] = mat\n\n      grp_q = apply( mat, 2, T_x )\n\n      mat = matrix( prb, length( unique( input$ad$g[ sel1 ] ) ),\n                    length( prb ), byrow = T )\n      g_sel = names( aq )\n      g_sel = as.character( npfd$G ) %in% g_sel\n      v_sel = grep( vl, colnames( npfd$P ) )\n      mat = mat * npfd$P[ g_sel, v_sel ]\n      ym[[ inc ]] = mat\n\n      grp_p = apply( mat, 2, T_x )\n      inc = inc + 1\n\n      pd$x[sel2] = grp_q;\n      pd$y[sel2] = grp_p;\n\n    } else {\n      pd$y[sel2] = 0;\n    }\n  }\n  names( xm ) = as.character( input$val )\n  names( ym ) = as.character( input$val )\n\n  out = list( pd = pd, xm = xm, ym = ym )\n\n  return( out )\n}\n\n# Lookup - 03\ncreate_qpe_output = function( input, npfd, ... ) {\n  # Purpose:\n  # ...\n  # Arguments:\n  # ...\n  # Returns:\n  # ...\n\n  arguments = list(...)\n  if ( !( 'prob' %in% names( arguments ) ) )\n    prb = c( 0, seq(.1,.9,.2), 1 ) else\n      prb = arguments$prob\n\n  plt = NULL\n  if ( input$n_g == 1 ) plt = j_qpe_one_level( input, npfd, prb )\n  if ( input$n_g > 1 ) plt = j_qpe_group( input, npfd, prb )\n\n  return( plt )\n}\n\n# Lookup - 05\ncheck_for_qpe_type = function( type ) {\n  # Purpose:\n  # ...\n  # Arguments:\n  # ...\n  # Returns:\n  # ...\n\n  qpe_types = c( 'QPE', 'qpe', 'Qpe', 'qPe', 'qpE',\n                 'QPe', 'QpE', 'qPE', 'quantile' )\n\n  return( type %in% qpe_types )\n}\n",
    "created" : 1495983375706.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "920704215",
    "id" : "B9C759F5",
    "lastKnownWriteTime" : 1495999430,
    "last_content_update" : 1495999429939,
    "path" : "F:/Stuff/Kevin's Stuff/Postdoc/R packages/rtplots/R/qpe_functions.R",
    "project_path" : "R/qpe_functions.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}